%JHB_recfile_preprocessing
%% this is a general script to explore data preprocessing and then double check the nueral data

% run_ML_jay


load('J:\My Drive\Work\XFB3_04_210827_spikes.mat')





%% extract LFP data
addpath('E:\GithubCodeRepositories\Trodes_2-2-3_Windows64\Resources\TrodesToMatlab')
[lfpRaw]=readTrodesExtractedDataFile('J:\My Drive\Work\XFB3_03_20210827.LFP_nt9ch1.dat');
rmpath('E:\GithubCodeRepositories\Trodes_2-2-3_Windows64\Resources\TrodesToMatlab');
lfpData=struct;
lfpData.descript=lfpRaw.description;
lfpData.voltageScaling=lfpRaw.voltage_scaling;
lfpData.original_file=lfpRaw.original_file;
lfpData.data=double(lfpRaw.fields.data);
lfpData.rawTime=[1:length(lfpData.data)]+lfpRaw.first_timestamp;
lfpData.startBin=lfpRaw.first_timestamp;
lfpData.sampRate=1500; % default
lfpData.starttime=lfpRaw.first_timestamp/lfpData.sampRate;
lfpData.samprate=lfpData.sampRate;
lfpData.realTime=lfpData.rawTime/lfpData.sampRate; % i think its 1.5khz...

tet9=lfpData;
tet39=lfpData;
% downsample via decimate or downsample

% this will generate a spectrogram, a ripple band filtered signal above a
% theta filtered signal, and then spikes below.  This will be for the whole
% session but you can zoom in in the x axis

% so 128/1500=85 msec window with a roughly 40 msec crawl
[s,w,t]=spectrogram(tet9.data,300,50,1:2:200,1500,'yaxis','power');

figure; 
sp=subplot(3,1,1);
imagesc(t+lfpData.starttime,w,SmoothMat2(zscore(log(abs(s)),1,2),[10 10],1)); set(gca,'ydir','normal');


sp(2)=subplot(3,1,2);
% first theta power
[thetaAmp,~,thetaFilt] = GetLFPBand(tet9.data,tet9.rawTime); % defaults to theta
load('ripplefilter.mat');
ripEEG=filtereeg2(tet9,ripplefilter,'int16',0);
plot(tet9.realTime,thetaFilt);
yyaxis right;
plot(tet9.realTime,ripEEG.data(:,1));
legend('Theta','Ripple')
box off;

sp(3)=subplot(3,1,3);
